
apply plugin: 'com.android.application'
///////////////// read the environment config
def envProperties = new Properties()
def envPropertiesFile = rootProject.file('env.properties')
if (envPropertiesFile.exists()) {
    envProperties.load(new FileInputStream(envPropertiesFile))
}

android {
    compileSdkVersion 30
    buildToolsVersion "29.0.3"
    defaultConfig {
        applicationId "kr.co.lecle.aloxide"
        minSdkVersion 26
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
//
//        def accountName = envProperties.getProperty("app_blockchain_account")
//        def blockchain_contract = envProperties.getProperty("app_blockchain_contract")
//        def pk = envProperties.getProperty("app_blockchain_account_pk")
//        def url = envProperties.getProperty("app_blockchain_url")
//        def blockchainType = envProperties.getProperty("app_blockchain_type")
//
//        buildConfigField "String","BLOCKCHAIN_ACCOUNT", "\"$accountName\""
//        buildConfigField "String","BLOCKCHAIN_CONTRACT", "\"$blockchain_contract\""
//        buildConfigField "String","PRIVATIE_KEY","\"$pk\""
//        buildConfigField "String","BLOCKCHAIN_URL", "\"$url\""
//        buildConfigField "String","BLOCKCHAIN_TYPE", "\"$blockchainType\""
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    packagingOptions {
        exclude 'lib/x86_64/darwin/libscrypt.dylib'
        exclude 'lib/x86_64/freebsd/libscrypt.so'
        exclude 'lib/x86_64/linux/libscrypt.so'
    }
    lintOptions {
        abortOnError false
    }


}

sourceSets {
    main {
//        java.srcDirs = ['src/main/java/kr/co/lecle/aloxide']
//        resources.srcDirs = ['src/main/java/kr/co/lecle/aloxide']
//
//        java {
//            // srcDirs 'src/main/java/kr/co/lecle'
//        }
//        resources {
//            includes = ["**/*.properties"]
//        }
    }
}



task GET(type: JavaExec) {
    main = "kr.co.lecle.aloxide.GET"
    classpath sourceSets.main.runtimeClasspath
}
task ADD(type: JavaExec) {
    main = "kr.co.lecle.aloxide.ADD"
    classpath sourceSets.main.runtimeClasspath
}
task DELETE(type: JavaExec) {
    main = "kr.co.lecle.aloxide.DELETE"
    classpath sourceSets.main.runtimeClasspath
}

task UPDATE(type: JavaExec) {
    main = "kr.co.lecle.aloxide.UPDATE"
    classpath sourceSets.main.runtimeClasspath
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'

    implementation 'foundation.icon:icon-sdk:1.0.0'
    implementation("com.squareup.okhttp3:okhttp:4.9.0")
    implementation 'org.bouncycastle:bcprov-jdk15to18:1.64'

    implementation group: 'io.jafka', name: 'jeos', version: '0.9.16'

    implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1'

}
